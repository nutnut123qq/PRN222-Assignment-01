// <auto-generated />
using System;
using FUNewsManagement.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StudentNameMVC.Migrations
{
    [DbContext(typeof(FUNewsManagementDbContext))]
    [Migration("20250603005805_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.Category", b =>
                {
                    b.Property<short>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short?>("ParentCategoryId")
                        .HasColumnType("smallint");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.NewsArticle", b =>
                {
                    b.Property<string>("NewsArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("CategoryId")
                        .HasColumnType("smallint");

                    b.Property<short>("CreatedById")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewsContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsSource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NewsStatus")
                        .HasColumnType("bit");

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("UpdatedById")
                        .HasColumnType("smallint");

                    b.HasKey("NewsArticleId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("NewsArticles");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.NewsTag", b =>
                {
                    b.Property<string>("NewsArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("NewsArticleId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("NewsTags");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.SystemAccount", b =>
                {
                    b.Property<short>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("AccountId"));

                    b.Property<string>("AccountEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("AccountRole")
                        .HasColumnType("smallint");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountEmail")
                        .IsUnique();

                    b.ToTable("SystemAccounts");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.Category", b =>
                {
                    b.HasOne("FUNewsManagement.DataAccess.Models.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.NewsArticle", b =>
                {
                    b.HasOne("FUNewsManagement.DataAccess.Models.Category", "Category")
                        .WithMany("NewsArticles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FUNewsManagement.DataAccess.Models.SystemAccount", "CreatedBy")
                        .WithMany("CreatedArticles")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FUNewsManagement.DataAccess.Models.SystemAccount", "UpdatedBy")
                        .WithMany("UpdatedArticles")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.NewsTag", b =>
                {
                    b.HasOne("FUNewsManagement.DataAccess.Models.NewsArticle", "NewsArticle")
                        .WithMany("NewsTags")
                        .HasForeignKey("NewsArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FUNewsManagement.DataAccess.Models.Tag", "Tag")
                        .WithMany("NewsTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsArticle");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.Category", b =>
                {
                    b.Navigation("NewsArticles");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.NewsArticle", b =>
                {
                    b.Navigation("NewsTags");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.SystemAccount", b =>
                {
                    b.Navigation("CreatedArticles");

                    b.Navigation("UpdatedArticles");
                });

            modelBuilder.Entity("FUNewsManagement.DataAccess.Models.Tag", b =>
                {
                    b.Navigation("NewsTags");
                });
#pragma warning restore 612, 618
        }
    }
}
