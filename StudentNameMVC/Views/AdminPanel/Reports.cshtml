@model StudentNameMVC.Models.ReportViewModel
@{
    ViewData["Title"] = "News Statistics Report";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="mb-4">News Statistics Report</h1>

            <!-- Date Range Filter -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-filter"></i> Filter by Date Range</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Reports" method="post">
                        <div class="row">
                            <div class="col-md-4">
                                <label asp-for="StartDate" class="form-label">Start Date</label>
                                <input asp-for="StartDate" class="form-control" type="date" />
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="EndDate" class="form-label">End Date</label>
                                <input asp-for="EndDate" class="form-control" type="date" />
                                <span asp-validation-for="EndDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-chart-bar"></i> Generate Report
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model.NewsStatistics.Any())
            {
                <!-- Statistics Summary -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card text-white bg-primary">
                            <div class="card-body">
                                <h5 class="card-title">Total News</h5>
                                <h2 class="card-text">@Model.TotalNews</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-white bg-success">
                            <div class="card-body">
                                <h5 class="card-title">Active News</h5>
                                <h2 class="card-text">@Model.NewsArticles.Count(n => n.NewsStatus)</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-white bg-warning">
                            <div class="card-body">
                                <h5 class="card-title">Inactive News</h5>
                                <h2 class="card-text">@Model.NewsArticles.Count(n => !n.NewsStatus)</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-white bg-info">
                            <div class="card-body">
                                <h5 class="card-title">Date Range</h5>
                                <p class="card-text">@Model.StartDate.ToString("dd/MM/yyyy") - @Model.EndDate.ToString("dd/MM/yyyy")</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Chart -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-line"></i> News Articles by Date</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="newsChart" width="400" height="100"></canvas>
                    </div>
                </div>

                <!-- Detailed News List -->
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-list"></i> News Articles Details (Sorted by Date - Descending)</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Title</th>
                                        <th>Category</th>
                                        <th>Author</th>
                                        <th>Created Date</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var news in Model.NewsArticles.OrderByDescending(n => n.CreatedDate))
                                    {
                                        <tr>
                                            <td>@news.NewsArticleId</td>
                                            <td>@news.NewsTitle</td>
                                            <td>@news.CategoryName</td>
                                            <td>@news.CreatedByName</td>
                                            <td>@news.CreatedDateFormatted</td>
                                            <td>
                                                <span class="badge @(news.NewsStatus ? "bg-success" : "bg-danger")">
                                                    @news.StatusText
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else if (ViewData.ModelState.IsValid && Model.StartDate != default && Model.EndDate != default)
            {
                <div class="alert alert-info">
                    <h5>No Data Found</h5>
                    <p>No news articles found for the selected date range (@Model.StartDate.ToString("dd/MM/yyyy") - @Model.EndDate.ToString("dd/MM/yyyy")).</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        @if (Model.NewsStatistics.Any())
        {
            <text>
            // Prepare chart data
            var chartData = @Html.Raw(Json.Serialize(Model.NewsStatistics.OrderBy(x => x.Key).Select(x => new { 
                date = x.Key.ToString("yyyy-MM-dd"), 
                count = x.Value 
            })));

            var ctx = document.getElementById('newsChart').getContext('2d');
            var newsChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: chartData.map(item => item.date),
                    datasets: [{
                        label: 'News Articles',
                        data: chartData.map(item => item.count),
                        borderColor: 'rgb(75, 192, 192)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'News Articles Created Over Time'
                        }
                    }
                }
            });
            </text>
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
